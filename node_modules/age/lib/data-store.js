// Generated by CoffeeScript 1.6.3
(function() {
  var DataStore, exports,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  DataStore = (function() {
    function DataStore() {
      this.get_player_achievements = __bind(this.get_player_achievements, this);
      this.get_player_history = __bind(this.get_player_history, this);
      this.make_player = __bind(this.make_player, this);
    }

    DataStore.prototype.make_player = function(player_data) {
      return {
        id: player_data.id,
        achievements: [],
        history: [],
        data: player_data
      };
    };

    DataStore.prototype.record_player = function(player, callback) {
      throw new Error('Method not implemented.');
    };

    DataStore.prototype.record_event = function(player, event, callback) {
      throw new Error('Method not implemented.');
    };

    DataStore.prototype.record_achievement = function(player, achievement, callback) {
      throw new Error('Method not implemented.');
    };

    DataStore.prototype.get_player = function(player, callback) {
      throw new Error('Method not implemented.');
    };

    DataStore.prototype.get_player_history = function(player, callback) {
      var _this = this;
      return this.get_player(player, function(err, player) {
        return typeof callback === "function" ? callback(err, player != null ? player.history : void 0) : void 0;
      });
    };

    DataStore.prototype.get_player_achievements = function(player, callback) {
      var _this = this;
      return this.get_player(player, function(err, player) {
        return typeof callback === "function" ? callback(err, player != null ? player.achievements : void 0) : void 0;
      });
    };

    return DataStore;

  })();

  exports = exports != null ? exports : this;

  exports.DataStore = DataStore;

}).call(this);
